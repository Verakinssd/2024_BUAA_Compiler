.data
    @N:  .word 10
    @a:  .word 0, 1, 2, 3, 4, 5, 6, 7, 8, 9


.text
.globl main

# fib:
fib:
# %v2 = alloca i32
    addi $t0 $sp -8
    sw   $t0 -12($sp)
# store i32 %v0, i32* %v2 
    lw   $t0 -4($sp)
    lw   $t1 -12($sp)
    sw   $t0 0($t1)
# %v3 = load i32, i32* %v2
    lw   $t0 -12($sp)
    lw   $t0 0($t0)
    sw   $t0 -16($sp)
# %v4 = add nsw i32 %v3, 1
    lw   $t0 -16($sp)
    li   $t1, 1
    addu $t0 $t0 $t1
    sw   $t0 -20($sp)
# ret i32 %v4
    lw   $v0 -20($sp)
    jr   $ra
# main:
main:
# %v1 = load i32, i32* @vN
    la $t0 @N
    lw   $t0 0($t0)
    sw   $t0 -4($sp)
# %v2 = call i32 @fib(i32 %v1)
    sw   $sp -8($sp)
    sw   $ra -12($sp)
    addi $sp $sp -12
    jal  fib
    lw   $ra 0($sp)
    lw   $sp 4($sp)
    sw   $v0 -16($sp)
# call void @putint(i32 %v2)
    lw   $a0 -16($sp)
    li   $v0, 1
    syscall
# ret i32 0
    li   $v0, 0
    jr   $ra
